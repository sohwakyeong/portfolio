import { useState, useEffect } from "react";
import { FiLink, FiFileText, FiImage, FiGithub } from "react-icons/fi";
import { Swiper, SwiperSlide } from "swiper/react";
import { Navigation, Pagination, A11y } from "swiper/modules";
import "swiper/css";
import "swiper/css/navigation";
import "swiper/css/pagination";
import Modal from "./Modal";

const ProjectDetails = () => {
  const projects = [
    {
      title: "IT ÏóòÎèÑÎùºÎèÑ (Î∏îÎ°úÍ∑∏)",
      date: "2024.09 (1‰∫∫ Í∞úÏù∏ ÌîÑÎ°úÏ†ùÌä∏)",
      summary: "Notion API/DBÏôÄ Ïó∞ÎèôÌïòÏó¨ Í∞úÎ∞úÌïú Í∞úÏù∏ Î∏îÎ°úÍ∑∏",
      url: "https://it-eldorado.com",
      techStacks:
        "TypeScript, Next.js, Zustand, React-Query, Tailwind CSS, Notion, Vercel",
      details: [
        "Ìã∞Ïä§ÌÜ†Î¶¨ ÌîåÎû´ÌèºÏóêÏÑúÏùò Î∂àÌé∏Ìï®ÏùÑ Ìï¥ÏÜåÌïòÍ≥†Ïûê ÏßÅÏ†ë Í∞úÎ∞ú",
        "Î≥ÑÎèÑÏùò Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÏÑúÎ≤Ñ ÏóÜÏù¥ Notion API/DBÏôÄ Ïó∞ÎèôÌïòÏó¨ Í∞úÎ∞ú",
        "Í≤ÄÏÉâ ÏóîÏßÑ ÏµúÏ†ÅÌôî(SEO) Í≥†ÎèÑÌôî Î∞è Í≤ÄÏÉâ ÏóîÏßÑ ÎßàÏù¥Í∑∏Î†àÏù¥ÏÖò",
        "Î¨¥Ìïú Ïä§ÌÅ¨Î°§, Î∞©Î¨∏/Ï°∞Ìöå Ïàò Ï∂îÏ†Å, ÎåìÍ∏Ä/Ï¢ãÏïÑÏöî Îì±Ïùò Ïª§ÎÆ§ÎãàÌã∞ Í∏∞Îä• Í∞úÎ∞ú",
      ],
      images: ["/ego.png", "/ego.png"],
      pdf: "https://example.com/pdf",
      gitBackend: "https://github.com/user/project-be",
      gitFrontend: "https://github.com/user/project-fe",
    },
    {
      title: "Îëê Î≤àÏß∏ ÌîÑÎ°úÏ†ùÌä∏",
      date: "2024.08 (ÌåÄ ÌîÑÎ°úÏ†ùÌä∏)",
      summary: "Îëê Î≤àÏß∏ ÌîÑÎ°úÏ†ùÌä∏Ïóê ÎåÄÌïú Í∞ÑÎã®Ìïú ÏÑ§Î™Ö",
      url: "https://example2.com",
      techStacks: "JavaScript, React, Redux, Firebase",
      details: [
        "ÌåÄ ÌîÑÎ°úÏ†ùÌä∏Î°ú ÌòëÏóÖÌïòÏó¨ ÏßÑÌñâ",
        "FirebaseÎ•º ÌôúÏö©ÌïòÏó¨ Ïã§ÏãúÍ∞Ñ Îç∞Ïù¥ÌÑ∞ Í¥ÄÎ¶¨",
        "ReduxÎ•º ÌôúÏö©Ìïú ÏÉÅÌÉú Í¥ÄÎ¶¨",
        "Î∞òÏùëÌòï ÎîîÏûêÏù∏ Î∞è ÏÇ¨Ïö©Ïûê Í≤ΩÌóò Í∞úÏÑ†",
      ],
      gitBackend: "https://github.com/user/project-be",
      gitFrontend: "https://github.com/user/project-fe",
    },
    {
      title: "ÏÑ∏ Î≤àÏß∏ ÌîÑÎ°úÏ†ùÌä∏",
      date: "2024.07 (ÌåÄ ÌîÑÎ°úÏ†ùÌä∏)",
      summary: "ÏÑ∏ Î≤àÏß∏ ÌîÑÎ°úÏ†ùÌä∏Ïóê ÎåÄÌïú Í∞ÑÎã®Ìïú ÏÑ§Î™Ö",
      url: "https://example3.com",
      techStacks: "Java, Spring Boot, MySQL, AWS",
      details: [
        "Ïä§ÌîÑÎßÅ Í∏∞Î∞ò Ïõπ Ïï†ÌîåÎ¶¨ÏºÄÏù¥ÏÖò Íµ¨Ï∂ï",
        "MySQLÏùÑ Ïù¥Ïö©Ìïú Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Íµ¨Ï∂ï",
        "AWSÎ•º ÌôúÏö©Ìïú ÌÅ¥ÎùºÏö∞Îìú ÏÑúÎπÑÏä§ Î∞∞Ìè¨",
      ],
      images: ["/ego.png", "/ego.png"],
    },
    {
      title: "ÎÑ§ Î≤àÏß∏ ÌîÑÎ°úÏ†ùÌä∏",
      date: "2024.06 (Í∞úÏù∏ ÌîÑÎ°úÏ†ùÌä∏)",
      summary: "ÎÑ§ Î≤àÏß∏ ÌîÑÎ°úÏ†ùÌä∏Ïóê ÎåÄÌïú Í∞ÑÎã®Ìïú ÏÑ§Î™Ö",
      url: "https://example4.com",
      techStacks: "Python, Django, PostgreSQL, Docker",
      details: [
        "Ïû•Í≥† ÌîÑÎ†àÏûÑÏõåÌÅ¨Î•º Ïù¥Ïö©Ìïú Í∞úÏù∏ ÌîÑÎ°úÏ†ùÌä∏",
        "PostgreSQL Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïó∞Îèô",
        "DockerÎ•º Ïù¥Ïö©Ìïú Ïª®ÌÖåÏù¥ÎÑà ÌôòÍ≤Ω Íµ¨Ï∂ï",
      ],
    },
  ];

  const [swiperIndex, setSwiperIndex] = useState(0);
  const [swiper, setSwiper] = useState(null);
  const [slidesPerView, setSlidesPerView] = useState(
    window.innerWidth >= 769 ? 2 : 1
  );
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [selectedImages, setSelectedImages] = useState([]);

  const handlePrev = () => swiper?.slidePrev();
  const handleNext = () => swiper?.slideNext();

  const handleOpenModal = (images) => {
    setSelectedImages(images);
    setIsModalOpen(true);
  };
  const handleCloseModal = () => {
    setIsModalOpen(false);
    setSelectedImages([]);
  };

  useEffect(() => {
    const handleResize = () => {
      setSlidesPerView(window.innerWidth >= 769 ? 2 : 1);
    };

    window.addEventListener("resize", handleResize);
    return () => window.removeEventListener("resize", handleResize);
  }, []);

  return (
    <section
      id="projects"
      className="min-h-screen bg-[#1e293b] flex flex-col justify-center items-center py-16 font-['Pretendard']"
    >
      <div className="container mx-auto px-4 sm:px-10 md:px-20">
        <div className="flex justify-center items-center mb-10">
          <div className="text-3xl mr-2">üîó</div>
          <h2 className="text-5xl font-semibold text-white border-b-2 border-gray-400 pb-2 font-['KakaoBigSans-ExtraBold']">
            PROJECTS
          </h2>
        </div>

        <Swiper
          modules={[Navigation, Pagination, A11y]}
          spaceBetween={30}
          slidesPerView={1}
          slidesPerGroup={1}
          loop={true}
          pagination={false}
          onSwiper={(e) => setSwiper(e)}
          onSlideChange={(e) => setSwiperIndex(e.realIndex)}
          breakpoints={{
            769: { slidesPerView: 2  ,slidesPerGroup: 2},
          }}
          className="pb-10"
        >
          {projects.map((project, index) => (
            <SwiperSlide key={index}>
              <div className="bg-white shadow-lg rounded-2xl p-6 flex flex-col justify-between sm:h-[420px] h-[520px] ">
                <div className="flex-grow">
                  <h4 className="text-2xl font-semibold mb-2 text-gray-900">
                    {project.title}
                  </h4>
                  <div className="text-gray-500 text-sm mb-3">
                    {project.date}
                  </div>

                  <div className="mb-3">
                    <h5 className="text-lg font-semibold mb-1 text-gray-800">
                      {project.summary}
                    </h5>
                    <ul className="list-disc pl-5 space-y-1 text-sm text-gray-700">
                      {project.details.map((detail, idx) => (
                        <li key={idx}>{detail}</li>
                      ))}
                    </ul>
                  </div>
                  {project.url && (
                    <div className="mb-3 flex items-center gap-2">
                      <FiLink className="text-gray-500" />
                      <a
                        href={project.url}
                        target="_blank"
                        className="text-blue-500 text-sm hover:underline break-all"
                      >
                        {project.url}
                      </a>
                    </div>
                  )}
                  <div className="mb-1">
                    <div className="font-semibold text-gray-600 text-sm">
                      Í∏∞Ïà† Ïä§ÌÉù
                    </div>
                    <div className="text-gray-800 text-sm">
                      {project.techStacks}
                    </div>
                  </div>
                </div>
                <div className="flex gap-2 flex-wrap">

                  {project.pdf && (
                    <a
                      href={project.pdf}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="flex items-center gap-1 bg-emerald-200 text-emerald-800 px-3 py-1 rounded-full hover:bg-emerald-300"
                    >
                      <FiFileText /> PDF Î≥¥Í∏∞
                    </a>
                  )}

                  {project.images && (
                    <button
                      className="flex items-center gap-1 bg-purple-200 text-purple-800 px-3 py-1 rounded-full hover:bg-purple-300 cursor-pointer"
                      onClick={() => handleOpenModal(project.images)}
                    >
                      <FiImage /> Ïù¥ÎØ∏ÏßÄ Î≥¥Í∏∞
                    </button>
                  )}

                  {project.gitBackend && (
                    <a
                      href={project.gitBackend}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="flex items-center gap-1 bg-gray-200 text-gray-800 px-3 py-1 rounded-full hover:bg-gray-300"
                    >
                      <FiGithub /> Git BE
                    </a>
                  )}

                  {project.gitFrontend && (
                    <a
                      href={project.gitFrontend}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="flex items-center gap-1 bg-sky-200 text-sky-800 px-3 py-1 rounded-full hover:bg-sky-300"
                    >
                      <FiGithub /> Git FE
                    </a>
                  )}
                </div>
              </div>
            </SwiperSlide>
          ))}
        </Swiper>

        <div className="flex items-center justify-center mt-6 gap-6">
          <button
            onClick={handlePrev}
            className="w-12 h-12 bg-gray-700 text-white rounded-full flex items-center justify-center hover:bg-gray-600 transition-all shadow-lg cursor-pointer"
          >
            ‚óÄ
          </button>
          <div className="text-white text-2xl font-bold">
            {Math.ceil((swiperIndex + 1) / slidesPerView)} /{" "}
            {Math.ceil(projects.length / slidesPerView)}
          </div>
          <button
            onClick={handleNext}
            className="w-12 h-12 bg-gray-700 text-white rounded-full flex items-center justify-center hover:bg-gray-600 transition-all shadow-lg cursor-pointer"
          >
            ‚ñ∂
          </button>
          <Modal
            isOpen={isModalOpen}
            onClose={handleCloseModal}
            images={selectedImages}
          />
        </div>
      </div>
    </section>
  );
};

export default ProjectDetails;
